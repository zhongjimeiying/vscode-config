// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "alt+h", // 游标向左移动
        "command": "cursorLeft",
        "when": "textInputFocus"
    },
    {
        "key": "alt+l", // 游标向右移动
        "command": "cursorRight",
        "when": "textInputFocus"
    },
    {
        "key": "alt+j", // 游标向下移动
        "command": "cursorDown",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+j", // 游标向下移动3个单位
        "command": "macros.downThreeLines",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k", // 游标向上移动
        "command": "cursorUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+k", // 游标向上移动3个单位
        "command": "macros.upThreeLines",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+a", // 移动到行首
        "command": "cursorHome",
        "when": "textInputFocus"
    },
    {
        "key": "alt+shift+a", // 移动到页首
        "command": "cursorTop",
        "when": "textInputFocus"
    },
    {
        "key": "alt+e", // 移动到行尾
        "command": "cursorEnd",
        "when": "textInputFocus"
    },
    {
        "key": "alt+shift+e", // 移动到页尾
        "command": "cursorBottom",
        "when": "textInputFocus"
    },
    {
        "key": "alt+;", // 智能扩选
        "command": "editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+shift+;", // 智能缩选
        "command": "editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+,", // 向左移动一个单词
        "command": "cursorWordStartLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+,", // 向左移动三个单词
        "command": "macros.moveLeftWords",
        "when": "textInputFocus"
    },
    {
        "key": "alt+.", // 向右移动一个单词
        "command": "cursorWordStartRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+.", // 向右移动三个单词
        "command": "macros.moveRightWords",
        "when": "textInputFocus"
    },
    {
        "key": "alt+n", // 焦点移动到下一个建议
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "alt+n", // 焦点移动到下一个文件导航选择上
        "command": "workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "alt+u", // 焦点移动到上一个建议
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "alt+u", // 焦点移动到上一个文件导航选择上
        "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "alt+i", // 剪切
        "command": "editor.action.clipboardCutAction",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+shift+o", // 在当前行上方插入
        "command": "editor.action.insertLineBefore",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+o", // 在当前行下方插入
        "command": "editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+p", // 粘贴
        "command": "editor.action.clipboardPasteAction",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+[", // 选中括号内容
        "command": "editor.action.selectToBracket",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+oem_2", // 跳转到括号的位置
        "command": "editor.action.jumpToBracket",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+backspace", // 删除前一个单词
        "command": "deleteWordLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+shift+backspace", // 删除后一个单词
        "command": "deleteWordLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+d", // 删除行
        "command": "editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+r", // 撤销
        "command": "undo",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+shift+r", // 重做
        "command": "redo",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+y", // 复制
        "command": "editor.action.clipboardCopyAction",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+d", // 智能删除该行
        "command": "macros.smartDeleteLine",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+shift+d", // 智能删除选中行
        "command": "macros.smartDeleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+h", // 智能删除左边所有内容
        "command": "macros.smartDeleteAllLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+l", // 删除右边所有内容
        "command": "deleteAllRight"
    },
    {
        "key": "shift+alt+backspace", // 向右删除一个单词
        "command": "deleteWordRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+enter", // 向下滚动5行
        "command": "macros.scrollDown",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+enter", // 向上滚动5行
        "command": "macros.scrollUp",
        "when": "textInputFocus"
    },
    {
        "key": "alt+shift+k", // 从当前位置开始向上选择
        "command": "cursorUpSelect",
        "when": "textInputFocus"
    },
    {
        "key": "alt+shift+j", // 从当前位置开始向下选择
        "command": "cursorDownSelect",
        "when": "textInputFocus"
    },
    {
        "key": "alt+shift+h", // 从当前位置开始向左选择
        "command": "cursorLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "alt+shift+l", // 从当前位置开始向右选择
        "command": "cursorRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "alt+shift+u", // 从当前位置开始选中到行首
        "command": "cursorHomeSelect",
        "when": "textInputFocus"
    },
    {
        "key": "alt+shift+n", // 从当前位置开始选中到行尾
        "command": "cursorEndSelect",
        "when": "textInputFocus"
    },
    {
        "key": "alt+shift+,", // 从当前位置开始向左选中一个单词
        "command": "cursorWordStartLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "alt+shift+.", // 从当前位置开始向右选中一个单词
        "command": "cursorWordEndRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "alt+oem_2", // 切换注释
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+oem_6", // 缩进
        "command": "editor.action.indentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+shift+oem_6", // 取消缩进
        "command": "editor.action.outdentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+o", // python语言:在当前行下方智能插入一行
        "command": "macros.cursorEndAndNewLineAndIndent",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'python'"
    },
    {
        "key": "ctrl+alt+o", // rust语言:在当前行末尾添加分号然后回车
        "command": "macros.rustAppendSemicolonAndNewLine",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'rust'"
    },
    {
        "key": "alt+m", // python语言:在当前行尾插入分号,并回车
        "command": "macros.cursorEndAndAddColonAndNewLineAndIndent",
        "when": "editorLangId == 'python' && editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+m", // js系列语言:在当前行尾插入大括号,并在大括号中间回车
        "command": "macros.jsCurlyBrace",
        "when": " editorLangId =~ /javascript|csharp|typescript|java|dart|vue|rust/ && editorTextFocus"
    },
    {
        "key": "alt+shift+m", // js系列语言:在当前行尾插入大括号和逗号,并在大括号中间回车
        "command": "macros.jsCurlyBraceWithComma",
        "when": " editorLangId =~ /javascript|csharp|typescript|java|dart|vue/ && editorTextFocus"
    },
    {
        "key": "alt+shift+m", // rust系列语言:在当前行尾插入大括号和分号,并在大括号中间回车
        "command": "macros.rustCurlyBraceWithSemicolon",
        "when": " editorLangId =~ /rust/ && editorTextFocus"
    },
    {
        "key": "alt+c", // 块注释
        "command": "editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+q", // 向上移动一个段落
        "command": "block-travel.jumpUp",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+q", // 向上选择一个段落
        "command": "block-travel.selectUp",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+w", // 向下移动一个段落
        "command": "block-travel.jumpDown",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+w", // 向下选择一个段落
        "command": "block-travel.selectDown",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+f", // vue插件格式化
        "command": "extension.vueFormat",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'vue'"
    },
    {
        "key": "alt+oem_plus", // 取消折叠
        "command": "editor.unfold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "alt+oem_minus", // 折叠
        "command": "editor.fold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "alt+oem_5", // 转为大写
        "command": "editor.action.transformToUppercase"
    },
    {
        "key": "shift+alt+oem_5", // 转为小写
        "command": "editor.action.transformToLowercase"
    },
    {
        "key": "shift+space", // 触发参数提示
        "command": "editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "key": "ctrl+shift+enter", // python执行当前行或选中内容
        "command": "python.datascience.execSelectionInteractive",
        "when": "editorTextFocus && python.datascience.featureenabled && editorLangId == 'python'"
    },
    {
        "key": "ctrl+alt+e", // 用系统文件管理器打开当前文件
        "command": "revealFileInOS",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+enter", // python语言: 在交互式环境中运行当前单元格中的代码
        "command": "python.datascience.runcurrentcell",
        "when": "editorTextFocus && python.datascience.featureenabled && python.datascience.hascodecells && !editorHasSelection && !notebookEditorFocused"
    },
    {
        "key": "ctrl+shift+d", // 再选中上一个相同内容
        "command": "editor.action.addSelectionToPreviousFindMatch"
    },
    {
        "key": "ctrl+k ctrl+9", // 折叠全部
        "command": "editor.foldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+0", // 取消折叠全部
        "command": "editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "alt+oem_7", // 向后搜索括号
        "command": "bracket-jumper.jumpRight",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+oem_7", // 向前搜索括号
        "command": "bracket-jumper.jumpLeft",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+f", // 格式化
        "command": "editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "key": "ctrl+alt+f", // 格式化
        "command": "notebook.formatCell",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "ctrl+alt+f", // 格式化
        "command": "notebook.format",
        "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "alt+0", // 聚焦当前编辑器组
        "command": "workbench.action.focusActiveEditorGroup",
    },
    {
        "key": "alt+oem_3",
        "command": "terminal.focus" // 聚焦终端
    },
    {
        "key": "shift+alt+0", // 切换终端最大化
        "command": "workbench.action.toggleMaximizedPanel"
    },
    {
        "key": "ctrl+oem_3", // 打开一个新的终端
        "command": "workbench.action.terminal.new"
    },
    {
        "key": "shift+alt+oem_3", // 清空终端内容
        "command": "workbench.action.terminal.clear",
    },
    {
        "key": "ctrl+shift+oem_3", // 关闭当前终端
        "command": "workbench.action.terminal.kill",
    },
    {
        "key": "alt+t", // 在当前环境下执行python文件
        "command": "python.execInTerminal",
        "when": "editorLangId == 'python'",
    },
    {
        "key": "alt+shift+t", // 激活python环境
        "command": "command-runner.run",
        "args": {
            "command": "source venv/Scripts/activate"
        },
        "when": "editorLangId == 'python'",
    },
    // todo: this is a seperate line
    {
        "key": "shift+alt+a",
        "command": "-editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+k",
        "command": "-code-runner.runCustomCommand"
    },
    {
        "key": "ctrl+alt+j",
        "command": "-code-runner.runByLanguage"
    },
    {
        "key": "alt+up",
        "command": "-block-travel.jumpUp",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+up",
        "command": "-block-travel.selectUp",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+down",
        "command": "-block-travel.selectDown",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+down",
        "command": "-block-travel.jumpDown",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+p",
        "command": "-extension.vueFormat",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'vue'"
    },
    {
        "key": "ctrl+shift+2",
        "command": "-autoDocstring.generateDocstring",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+e",
        "command": "-workbench.view.explorer"
    },
    {
        "key": "shift+alt+r",
        "command": "-revealFileInOS",
        "when": "!editorFocus"
    },
    {
        "key": "ctrl+shift+oem_6",
        "command": "-editor.unfold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+shift+oem_4",
        "command": "-editor.fold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+enter",
        "command": "-python.datascience.execSelectionInteractive",
        "when": "editorTextFocus && python.datascience.featureenabled && python.datascience.ownsSelection && !findInputFocussed && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "shift+enter",
        "command": "-python.execSelectionInTerminal",
        "when": "editorTextFocus && !findInputFocussed && !python.datascience.ownsSelection && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "shift+enter",
        "command": "-python.datascience.execSelectionInteractive",
        "when": "editorTextFocus && python.datascience.featureenabled && python.datascience.ownsSelection && !findInputFocussed && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "shift+enter",
        "command": "-python.execSelectionInTerminal",
        "when": "editorTextFocus && !findInputFocussed && !python.datascience.ownsSelection && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "ctrl+enter",
        "command": "-editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+oem_3",
        "command": "-workbench.action.terminal.new"
    },
    {
        "key": "shift+enter",
        "command": "-python.datascience.execSelectionInteractive",
        "when": "editorTextFocus && python.datascience.featureenabled && python.datascience.ownsSelection && !findInputFocussed && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "shift+enter",
        "command": "-python.execSelectionInTerminal",
        "when": "editorTextFocus && !findInputFocussed && !python.datascience.ownsSelection && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "ctrl+enter",
        "command": "-editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+oem_3",
        "command": "-workbench.action.terminal.new"
    },
    {
        "key": "ctrl+shift+space",
        "command": "-editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "key": "ctrl+alt+l",
        "command": "-turboConsoleLog.displayLogMessage"
    },
    {
        "key": "shift+alt+d",
        "command": "-turboConsoleLog.deleteAllLogMessages"
    },
    {
        "key": "alt+c",
        "command": "-workbench.action.terminal.toggleFindCaseSensitive",
        "when": "terminalFindFocused || terminalFocus"
    },
    {
        "key": "alt+c",
        "command": "-toggleFindCaseSensitive",
        "when": "editorFocus"
    },
    {
        "key": "alt+c",
        "command": "-toggleSearchCaseSensitive",
        "when": "searchViewletFocus"
    },
    {
        "key": "alt+c",
        "command": "-toggleSearchEditorCaseSensitive",
        "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
        "key": "shift+alt+c",
        "command": "-turboConsoleLog.commentAllLogMessages"
    },
    {
        "key": "shift+alt+c",
        "command": "-copyFilePath",
        "when": "!editorFocus"
    },
    {
        "key": "shift+alt+c",
        "command": "-search.action.copyPath",
        "when": "fileMatchOrFolderMatchWithResourceFocus"
    },
    {
        "key": "shift+alt+u",
        "command": "-turboConsoleLog.uncommentAllLogMessages"
    },
    {
        "key": "alt+c",
        "command": "-gitlens.showQuickCommitFileDetails",
        "when": "editorTextFocus && gitlens:enabled && config.gitlens.keymap == 'alternate'"
    },
    {
        "key": "ctrl+oem_1",
        "command": "-extension.insertSemiColon",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+oem_1",
        "command": "-extension.removeSemiColon",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+oem_1",
        "command": "-breadcrumbs.focus",
        "when": "breadcrumbsPossible"
    },
    {
        "key": "shift+enter",
        "command": "-editor.action.previousMatchFindAction",
        "when": "editorFocus && findInputFocussed"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "-editor.action.insertLineBefore",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+enter",
        "command": "-workbench.action.terminal.findNext",
        "when": "terminalFindFocused"
    },
    {
        "key": "ctrl+enter",
        "command": "-python.datascience.runcurrentcell",
        "when": "editorTextFocus && python.datascience.featureenabled && python.datascience.hascodecells && !editorHasSelection && !notebookEditorFocused"
    },
    {
        "key": "shift+enter",
        "command": "-python.datascience.runcurrentcelladvance",
        "when": "editorTextFocus && python.datascience.featureenabled && python.datascience.hascodecells && !editorHasSelection && !notebookEditorFocused"
    },
    {
        "key": "shift+enter",
        "command": "-python.datascience.execSelectionInteractive",
        "when": "editorTextFocus && python.datascience.featureenabled && python.datascience.ownsSelection && !findInputFocussed && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "shift+enter",
        "command": "-notebook.cell.execute",
        "when": "notebookCellListFocused"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "ctrl+shift+p",
        "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "ctrl+k ctrl+j",
        "command": "-editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+0",
        "command": "-editor.foldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+alt+left",
        "command": "-bracket-jumper.jumpLeft",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+right",
        "command": "-bracket-jumper.jumpRight",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+f",
        "command": "-notebook.formatCell",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "shift+alt+f",
        "command": "-editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "key": "shift+alt+f",
        "command": "-editor.action.formatDocument.none",
        "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorHasDocumentFormattingProvider && !editorReadonly"
    },
    {
        "key": "shift+alt+f",
        "command": "-notebook.format",
        "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "shift+alt+f",
        "command": "-filesExplorer.findInFolder",
        "when": "explorerResourceIsFolder && explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "ctrl+delete",
        "command": "-deleteWordRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+d",
        "command": "-workbench.view.debug"
    },
    {
        "key": "ctrl+alt+r",
        "command": "command-runner.run"
    },
    {
        "key": "ctrl+shift+r",
        "command": "-command-runner.run"
    },
    {
        "key": "alt+f",
        "command": "zaptochar.forward"
    },
    {
        "key": "shift+alt+f",
        "command": "zaptochar.deleteForward"
    }
]