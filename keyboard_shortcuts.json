[
    {
        "key": "ctrl+enter",
        "command": "python.execSelectionInTerminal",
        "when": "editorFocus && !findInputFocussed && !python.datascience.hascodecells && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "shift+enter",
        "command": "-python.execSelectionInTerminal",
        "when": "editorFocus && !findInputFocussed && !python.datascience.hascodecells && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "shift+enter",
        "command": "editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+enter",
        "command": "-editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+h",
        "command": "cursorLeft",
        "when": "textInputFocus"
    },
    {
        "key": "alt+j",
        "command": "cursorDown",
        "when": "textInputFocus"
    },
    {
        "key": "alt+k",
        "command": "cursorUp",
        "when": "textInputFocus"
    },
    {
        "key": "alt+l",
        "command": "cursorRight",
        "when": "textInputFocus"
    },
    {
        "key": "alt+a",
        "command": "cursorHome",
        "when": "textInputFocus"
    },
    {
        "key": "alt+e",
        "command": "cursorEnd",
        "when": "textInputFocus"
    },
    {
        "key": "alt+;",
        "command": "editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+shift+;",
        "command": "editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+,",
        "command": "cursorWordStartLeft",
        "when": "textInputFocus"
    },
    {
        "key": "alt+.",
        "command": "cursorWordStartRight",
        "when": "textInputFocus"
    },
    {
        "key": "alt+0",
        "command": "cursorTop",
        "when": "textInputFocus"
    },
    {
        "key": "alt+9",
        "command": "cursorBottom",
        "when": "textInputFocus"
    },
    {
        "key": "alt+n",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "alt+u",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "alt+i",
        "command": "editor.action.clipboardCutAction",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+o",
        "command": "editor.action.insertLineBefore",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+p",
        "command": "editor.action.clipboardPasteAction",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+[",
        "command": "editor.action.selectToBracket",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+'",
        "command": "editor.action.jumpToBracket",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+backspace",
        "command": "deleteWordLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+d",
        "command": "editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+r",
        "command": "undo",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+shift+r",
        "command": "redo",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+y",
        "command": "editor.action.clipboardCopyAction",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+b",
        "command": "workbench.action.navigateBack",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+-",
        "command": "deleteAllLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+=",
        "command": "deleteAllRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+enter",
        "command": "macros.scrollDown",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+enter",
        "command": "macros.scrollUp",
        "when": "textInputFocus"
    },
    {
        "key": "alt+shift+k",
        "command": "cursorUpSelect",
        "when": "textInputFocus"
    },
    {
        "key": "alt+shift+j",
        "command": "cursorDownSelect",
        "when": "textInputFocus"
    },
    {
        "key": "alt+shift+h",
        "command": "cursorLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "alt+shift+l",
        "command": "cursorRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "alt+shift+u",
        "command": "cursorHomeSelect",
        "when": "textInputFocus"
    },
    {
        "key": "alt+shift+n",
        "command": "cursorEndSelect",
        "when": "textInputFocus"
    },
    {
        "key": "alt+shift+,",
        "command": "cursorWordStartLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "alt+shift+.",
        "command": "cursorWordEndRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "alt+oem_2",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+`",
        "command": "workbench.action.toggleMaximizedPanel"
    },
    {
        "key": "alt+oem_6",
        "command": "editor.action.indentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+shift+oem_6",
        "command": "editor.action.outdentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+enter",
        "command": "macros.cursorEndAndNewLineAndIndent",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'python'"
    },
    {
        "key": "alt+m",
        "command": "macros.cursorEndAndAddColonAndNewLineAndIndent",
        "when": "editorLangId == 'python' && editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+v",
        "command": "editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+a",
        "command": "-editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+j",
        "command": "macros.downThreeLines",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+k",
        "command": "macros.upThreeLines",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+k",
        "command": "-code-runner.runCustomCommand"
    },
    {
        "key": "ctrl+alt+j",
        "command": "-code-runner.runByLanguage"
    },
    {
        "key": "alt+m",
        "command": "macros.jsCurlyBrace",
        "when": " editorLangId =~ /javascript|csharp|typescript|java|dart/ && editorTextFocus"
    },
    {
        "key": "alt+f",
        "command": "macros.pythonDocing",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+q",
        "command": "block-travel.jumpUp",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+up",
        "command": "-block-travel.jumpUp",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+q",
        "command": "block-travel.selectUp",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+up",
        "command": "-block-travel.selectUp",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+w",
        "command": "block-travel.selectDown",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+down",
        "command": "-block-travel.selectDown",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+w",
        "command": "block-travel.jumpDown",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+down",
        "command": "-block-travel.jumpDown",
        "when": "editorTextFocus"
    }
]